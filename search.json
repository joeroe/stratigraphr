[{"path":"/articles/cql.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Chronological Query Language (CQL)","text":"Individual CQL commands (see https://c14.arch.ox.ac.uk/oxcalhelp/hlp_commands.html) implemented cql_* functions. Use cql() group together CQL functions include arbitrary CQL code. Execute CQL scripts OxCal using write_oxcal() oxcAAR package.","code":""},{"path":"/articles/cql.html","id":"writing-cql-models","dir":"Articles","previous_headings":"","what":"Writing CQL models","title":"Chronological Query Language (CQL)","text":"","code":"library(\"stratigraphr\")"},{"path":"/articles/cql.html","id":"generating-cql-models-from-other-types-of-data","dir":"Articles","previous_headings":"","what":"Generating CQL models from other types of data","title":"Chronological Query Language (CQL)","text":"Used simple way , stratigraphr’s CQL interface offers little benefit writing CQL directly. real power combining cql() R tools build models based data. following examples, use stratigraphic radiocarbon data Shubayqa 1 (Richter et al. 2017):","code":"data(\"shub1\") data(\"shub1_radiocarbon\")"},{"path":"/articles/cql.html","id":"tabular-data","dir":"Articles","previous_headings":"Generating CQL models from other types of data","what":"Tabular data","title":"Chronological Query Language (CQL)","text":"radiocarbon stratigraphic data tabular format, can take advantage dplyr’s powerful tools data manipulation build CQL models programmatically. example, use dplyr::mutate() concisely express table dates CQL R_Date commands: use dplyr::group_by() dplyr::summarise() build phase models. three stage process, illustrated phase model Shubayqa 1: Preprocess dates, e.g. remove outliers order phases. Group dates phase summarise cql_phase(). Group phases sequence, using boundaries automatically add boundary constraints . multiple independent sequences, include additional grouping variable , concatenating cql().","code":"library(\"purrr\") library(\"dplyr\") #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  shub1_radiocarbon %>%    mutate(r_date = cql_r_date(lab_id, cra, error)) %>%    pluck(\"r_date\") %>%    cql() #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  R_Date(\"RTD-7951\", 12166, 55); #>  R_Date(\"Beta-112146\", 12310, 60); #>  R_Date(\"RTD-7317\", 12289, 46); #>  R_Date(\"RTD-7318\", 12332, 46); #>  R_Date(\"RTD-7948\", 12478, 38); #>  R_Date(\"RTD-7947\", 12322, 38); #>  R_Date(\"RTD-7313\", 12346, 46); #>  R_Date(\"RTD-7311\", 12367, 65); #>  R_Date(\"RTD-7312\", 12405, 50); #>  R_Date(\"RTD-7314\", 12273, 48); #>  R_Date(\"RTD-7316\", 12337, 46); #>  R_Date(\"RTD-7315\", 12445, 70); #>  R_Date(\"RTK-6818\", 12477, 76); #>  R_Date(\"RTK-6820\", 12385, 75); #>  R_Date(\"RTK-6821\", 12385, 78); #>  R_Date(\"RTK-6822\", 12412, 79); #>  R_Date(\"RTK-6823\", 12321, 78); #>  R_Date(\"RTK-6813\", 12344, 85); #>  R_Date(\"RTK-6816\", 12389, 78); #>  R_Date(\"RTK-6819\", 11325, 74); #>  R_Date(\"RTK-6812\", 11365, 72); #>  R_Date(\"RTK-6817\", 11322, 75); #>  R_Date(\"RTD-8904\", 10317, 38); #>  R_Date(\"RTK-6814\", 10229, 70); #>  R_Date(\"RTD-8902\", 10107, 53); #>  R_Date(\"RTD-8903\", 10095, 52); #>  R_Date(\"RTK-6815\", 1229, 54); shub1_radiocarbon %>%    filter(!outlier) %>%    group_by(phase) %>%    summarise(cql = cql_phase(phase, cql_r_date(lab_id, cra, error))) %>%    arrange(desc(phase)) %>%    summarise(cql = cql_sequence(\"Shubayqa 1\", cql, boundaries = TRUE)) %>%   pluck(\"cql\") %>%   cql() ->   shub1_cql  shub1_cql #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  Sequence(\"Shubayqa 1\") #>  { #>   Boundary(\"\"); #>   Phase(\"Phase 7\") #>   { #>    R_Date(\"RTD-7951\", 12166, 55); #>    R_Date(\"Beta-112146\", 12310, 60); #>    R_Date(\"RTD-7317\", 12289, 46); #>    R_Date(\"RTD-7318\", 12332, 46); #>    R_Date(\"RTD-7948\", 12478, 38); #>   }; #>   Boundary(\"\"); #>   Phase(\"Phase 6\") #>   { #>    R_Date(\"RTD-7947\", 12322, 38); #>    R_Date(\"RTD-7313\", 12346, 46); #>    R_Date(\"RTD-7311\", 12367, 65); #>    R_Date(\"RTD-7312\", 12405, 50); #>    R_Date(\"RTD-7314\", 12273, 48); #>    R_Date(\"RTD-7316\", 12337, 46); #>    R_Date(\"RTD-7315\", 12445, 70); #>   }; #>   Boundary(\"\"); #>   Phase(\"Phase 5\") #>   { #>    R_Date(\"RTK-6818\", 12477, 76); #>    R_Date(\"RTK-6820\", 12385, 75); #>    R_Date(\"RTK-6821\", 12385, 78); #>    R_Date(\"RTK-6822\", 12412, 79); #>    R_Date(\"RTK-6823\", 12321, 78); #>   }; #>   Boundary(\"\"); #>   Phase(\"Phase 4\") #>   { #>    R_Date(\"RTK-6813\", 12344, 85); #>    R_Date(\"RTK-6816\", 12389, 78); #>   }; #>   Boundary(\"\"); #>   Phase(\"Phase 3\") #>   { #>    R_Date(\"RTK-6819\", 11325, 74); #>   }; #>   Boundary(\"\"); #>   Phase(\"Phase 2\") #>   { #>    R_Date(\"RTK-6812\", 11365, 72); #>    R_Date(\"RTK-6817\", 11322, 75); #>   }; #>   Boundary(\"\"); #>   Phase(\"Phase 1\") #>   { #>    R_Date(\"RTD-8904\", 10317, 38); #>    R_Date(\"RTK-6814\", 10229, 70); #>    R_Date(\"RTD-8902\", 10107, 53); #>    R_Date(\"RTD-8903\", 10095, 52); #>   }; #>   Boundary(\"\"); #>  };"},{"path":"/articles/cql.html","id":"stratigraphs","dir":"Articles","previous_headings":"Generating CQL models from other types of data","what":"Stratigraphs","title":"Chronological Query Language (CQL)","text":"…","code":""},{"path":"/articles/cql.html","id":"running-cql-models","dir":"Articles","previous_headings":"","what":"Running CQL models","title":"Chronological Query Language (CQL)","text":"can run models generated cql() using desktop online versions OxCal simply copying output program. Alternatively, use write_oxcal() create .oxcal file: can also run OxCal directly R using oxcAAR package. depends local installation OxCal. already one installed, can set path executable using oxcAAR::setOxcalExecutablePath(). Otherwise, use oxcAAR::quickSetupOxcal() download one, example temporary directory: can use oxcAAR::executeOxcalScript() run CQL script oxcAAR::readOxcalOutput() read output back R. can parse output oxcAAR::parseOxcalOutput() visualise using oxcAAR’s built-plotting functions:  current CRAN version oxcAAR (v. 1.0.0) read posterior probabilities produced model Bayesian calibration, work need install latest development version (devtools::install_github(\"ISAAKiel/oxcAAR\")). , oxcAAR::parseOxcalOutput() also contains modelled results $posterior_sigma_ranges $posterior_probabilities. , can quickly visualise built-plotting functions:","code":"oxcal_cql <- cql(   cql_r_date(\"ABC-001\", 9100, 30),   cql_r_date(\"ABC-002\", 9200, 30),   cql_r_date(\"ABC-003\", 9300, 30) )  write_oxcal(oxcal_cql, \"cql.oxcal\") library(\"oxcAAR\") quickSetupOxcal(path = tempdir()) executeOxcalScript(oxcal_cql) %>%    readOxcalOutput() ->   oxcal_output oxcal_parsed <- oxcAAR::parseOxcalOutput(oxcal_output) plot(oxcal_parsed) #> Warning: The `guide` argument in `scale_*()` cannot be `FALSE`. This was deprecated in #> ggplot2 3.3.4. #> ℹ Please use \"none\" instead. #> ℹ The deprecated feature was likely used in the oxcAAR package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. calcurve_plot(oxcal_parsed) # Not run: slow # shub1_oxcal <- executeOxcalScript(shub1_cql) # readOxcalOutput(shub1_oxcal) %>%  #   parseOxcalOutput() %>%  #   plot()"},{"path":[]},{"path":"/articles/tidy_radiocarbon.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Tidy radiocarbon analysis","text":"Keep uncalibrated dates tidy, tabular format (e.g. tibble data.frame) together contextual data associated sample. cal objects generic representation calibrated probability distributions can nested within tables maintain association contextual data. Functions provided convert objects variety packages cal format. c14_* functions provide consistent set verbs transforming radiocarbon data work well dplyr-style data manipulation within functional analysis pipelines.","code":""},{"path":"/articles/tidy_radiocarbon.html","id":"tidy-radiocarbon-data","dir":"Articles","previous_headings":"","what":"Tidy radiocarbon data","title":"Tidy radiocarbon analysis","text":"“Tidy data” (Wickham 2014) set principles organising datasets way makes easy perform data analysis without tedious “data munging” step. brief, tidy datasets “rectangular” tables : Every column variable. Every row observation. Every cell single value. Conventionally-reported uncalibrated radiocarbon dates (Millard 2014) readily adapted format. row represent single sample, important variables laboratory code, conventional radiocarbon age (CRA), standard error. information sample, laboratory context, stored additional commons. shub1-radiocarbon dataset (Richter et al. 2017), including package, example tidy radiocarbon data tibble: Radiocarbon data sources might require cleaning get format. tidyr useful package (see shub1_radiocarbon.R example tidyr used clean Shubayqa 1 dataset). working dates aggregated multiple sources, c14bazAAR package provides many useful tools automatically querying published databases cleaning results. vignette, stick shub1 dataset.","code":"data(\"shub1_radiocarbon\") head(shub1_radiocarbon) #>        lab_id context   phase                           sample #> 1    RTD-7951      23 Phase 7         Context 126, Sample #465 #> 2 Beta-112146      24 Phase 7                        SHUB1/105 #> 3    RTD-7317      26 Phase 7          Context 83, Sample #392 #> 4    RTD-7318      27 Phase 7          Context 86, Sample #399 #> 5    RTD-7948      24 Phase 7         Context 120, Sample #455 #> 6    RTD-7947      22 Phase 6 Context 166, K25.14, Sample #430 #>                    material   cra error outlier #> 1 Bolboschoenus sp. (tuber) 12166    55   FALSE #> 2          gazelle dung (?) 12310    60   FALSE #> 3 Bolboschoenus sp. (tuber) 12289    46   FALSE #> 4 Zilla sp. (wood charcoal) 12332    46   FALSE #> 5 Bolboschoenus sp. (tuber) 12478    38   FALSE #> 6 Bolboschoenus sp. (tuber) 12322    38   FALSE"},{"path":"/articles/tidy_radiocarbon.html","id":"calibration","dir":"Articles","previous_headings":"","what":"Calibration","title":"Tidy radiocarbon analysis","text":"first step analysis radiocarbon data likely calibration. dplyr’s grammar, calibration mutation original (uncalibrated) data; creates new variable (calibrated probability distribution) observation based transformation based original variables (cra, error) number , fixed parameters (e.g. calibration curve). Performing calibration dplyr::mutate() useful allows us keep result transformation together input data associated contextual information. c14_calibrate() wrapper rcarbon::calibrate() can used within dplyr statements: calibrated dates stored nested column cal objects (see ). work probability distributions directly (e.g. plot ggplot2) eventually need expand column “long” format, year sample row, using [tidyr::unnest()]. now nested table helpful keeping master dataset readable.","code":"library(\"dplyr\")  shub1_radiocarbon %>%    mutate(cal = c14_calibrate(cra, error, lab_id, verbose = FALSE)) ->   shub1_radiocarbon #> Warning: There were 2 warnings in `mutate()`. #> The first warning was: #> ℹ In argument: `cal = c14_calibrate(cra, error, lab_id, verbose = FALSE)`. #> Caused by warning: #> ! stratigraphr::c14_calibrate() is deprecated. Please use c14::c14_calibrate() instead. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.  head(shub1_radiocarbon) #> # A tibble: 6 × 9 #>   lab_id      context phase   sample          material   cra error outlier cal   #>   <chr>         <int> <chr>   <chr>           <chr>    <int> <int> <lgl>   <lis> #> 1 RTD-7951         23 Phase 7 Context 126, S… Bolbosc… 12166    55 FALSE   <cal> #> 2 Beta-112146      24 Phase 7 SHUB1/105       gazelle… 12310    60 FALSE   <cal> #> 3 RTD-7317         26 Phase 7 Context 83, Sa… Bolbosc… 12289    46 FALSE   <cal> #> 4 RTD-7318         27 Phase 7 Context 86, Sa… Zilla s… 12332    46 FALSE   <cal> #> 5 RTD-7948         24 Phase 7 Context 120, S… Bolbosc… 12478    38 FALSE   <cal> #> 6 RTD-7947         22 Phase 6 Context 166, K… Bolbosc… 12322    38 FALSE   <cal>"},{"path":"/articles/tidy_radiocarbon.html","id":"the-cal-class","dir":"Articles","previous_headings":"Calibration","what":"The cal class","title":"Tidy radiocarbon analysis","text":"stratigraphr uses cal S3 class generic representation calibrated radiocarbon dates. data.frame two columns containing range calendar years (year) associated probability densities (p). Metadata associated calibration, era system atmospheric curve used, stored attributes can accessed cal_metadata(). radiocarbon packages similar structures storing calibrated dates, differing primarily metadata handled. c14_* functions described designed seamlessly convert object types functions packages invoked. However, need , can directly construct cal object vector probabilities cal(), various types object as_cal(). cal class also methods pretty-printing calibrated dates: calculating meaningful summary statistics, minimum maximum calibrated range:","code":"shub1_radiocarbon$cal[[1]] #> Warning: stratigraphr::cal_metadata() is deprecated. Please use #> c14::cal_metadata() instead. #> # Calibrated probability distribution from 14805 to 13796 cal|----------|----------------|-----------------------|------------------------| #> 13800      1400014200            14400                   14600                    1480015000 #> Lab ID: RTD-7951 #> Uncalibrated: 12166±55 uncal BP #> era: cal BP #> curve: intcal20 #> reservoir_offset: 0 #> reservoir_offset_error: 0 #> calibration_range: 55000–0 BP #> normalised: TRUE #> F14C: FALSE #> p_cutoff: 1e-05 # See https://github.com/joeroe/stratigraphr/issues/7 # min(shub1_radiocarbon$cal) # max(shub1_radiocarbon$cal)"},{"path":"/articles/tidy_radiocarbon.html","id":"visualising-radiocarbon-data-with-ggplot2","dir":"Articles","previous_headings":"","what":"Visualising radiocarbon data with ggplot2","title":"Tidy radiocarbon analysis","text":"","code":"library(\"ggplot2\") library(\"tidyr\") shub1_radiocarbon %>%    filter(!outlier) %>%    unnest(c(cal)) %>%    ggplot(aes(x = year, y = p)) +   facet_wrap(vars(lab_id), ncol = 1, scales = \"free_y\", strip.position = \"left\") +   geom_area() +   labs(x = \"cal BP\", y = NULL) +   theme(axis.text.y = element_blank(),         axis.ticks.y = element_blank(),         panel.grid.major.y = element_blank(),         panel.grid.minor.y = element_blank(),         strip.text.y.left = element_text(angle = 0))"},{"path":[]},{"path":"/articles/tidy_radiocarbon.html","id":"summed-probability-distributions","dir":"Articles","previous_headings":"Modelling radiocarbon data","what":"Summed probability distributions","title":"Tidy radiocarbon analysis","text":"dplyr’s grammar, summing radiocarbon dates summary original data, reduces number observations. c14_sum wrapper rcarbon::spd() can used dplyr statement.","code":"shub1_radiocarbon %>%    group_by(phase) %>%    summarise(spd = c14_sum(cal, verbose = FALSE), .groups = \"drop_last\") ->   shub1_spd #> Warning: There were 34 warnings in `summarise()`. #> The first warning was: #> ℹ In argument: `spd = c14_sum(cal, verbose = FALSE)`. #> ℹ In group 1: `phase = \"Phase 1\"`. #> Caused by warning: #> ! stratigraphr::c14_sum() is deprecated. Please use c14::c14_sum() instead. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 33 remaining warnings.  head(shub1_spd) #> # A tibble: 6 × 2 #>   phase   spd                    #>   <chr>   <list>                 #> 1 Phase 1 <CalGrid [11,652 × 2]> #> 2 Phase 2 <CalGrid [560 × 2]>    #> 3 Phase 3 <CalGrid [473 × 2]>    #> 4 Phase 4 <CalGrid [1,230 × 2]>  #> 5 Phase 5 <CalGrid [1,324 × 2]>  #> 6 Phase 6 <CalGrid [1,123 × 2]>"},{"path":"/articles/tidy_radiocarbon.html","id":"bayesian-calibration","dir":"Articles","previous_headings":"Modelling radiocarbon data","what":"Bayesian calibration","title":"Tidy radiocarbon analysis","text":"See vignette(\"cql\").","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Roe. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roe J (2023). stratigraphr: Archaeological Stratigraphy Chronological Sequences. https://stratigraphr.joeroe.io, https://github.com/joeroe/stratigraphr.","code":"@Manual{,   title = {stratigraphr: Archaeological Stratigraphy and Chronological Sequences},   author = {Joe Roe},   year = {2023},   note = {https://stratigraphr.joeroe.io, https://github.com/joeroe/stratigraphr}, }"},{"path":"/index.html","id":"stratigraphr-","dir":"","previous_headings":"","what":"Archaeological Stratigraphy and Chronological Sequences","title":"Archaeological Stratigraphy and Chronological Sequences","text":"stratigraphr tidy framework working archaeological stratigraphy chronology R. includes tools reading, analysing, visualising stratigraphies (Harris matrices) sequences directed graphs; helper functions using radiocarbon dates tidy data analysis; R interface OxCal’s Chronological Query Language (CQL).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Archaeological Stratigraphy and Chronological Sequences","text":"can install development version stratigraphr GitHub: Please note package early stage development. functional, many features missing future versions likely contain breaking changes.","code":"# install.packages(\"devtools\") devtools::install_github(\"joeroe/stratigraphr\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Archaeological Stratigraphy and Chronological Sequences","text":"Graph-bases stratigraphic analysis: see vignette(\"stratigraph\"). Tidy analysis radiocarbon dates: see vignette(\"tidy_radiocarbon\"). Chronological query language: see vignette(\"cql\").","code":""},{"path":"/reference/as.CalDates.cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cal objects to a rcarbon CalDates object — as.CalDates.cal","title":"Convert cal objects to a rcarbon CalDates object — as.CalDates.cal","text":"Convert cal objects rcarbon CalDates object","code":""},{"path":"/reference/as.CalDates.cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cal objects to a rcarbon CalDates object — as.CalDates.cal","text":"","code":"as.CalDates.cal(x)"},{"path":"/reference/as.CalDates.cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert cal objects to a rcarbon CalDates object — as.CalDates.cal","text":"x list cal objects.","code":""},{"path":"/reference/as.CalDates.cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert cal objects to a rcarbon CalDates object — as.CalDates.cal","text":"CalDates object. See rcarbon::calibrate() details.","code":""},{"path":[]},{"path":"/reference/as_cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to a cal object — as_cal","title":"Convert an object to a cal object — as_cal","text":"as_cal() converts objects packages represent calibrated radiocarbon dates cal objects. Methods currently implemented : CalDates: rcarbon::calibrate() oxcAARCalibratedDate oxcAARCalibratedDatesList: oxcAAR::oxcalCalibrate() BchronCalibratedDates: Bchron::BchronCalibrate() functions intended complex S3 objects packages. See cal() generic constructor, e.g. using data frame.","code":""},{"path":"/reference/as_cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to a cal object — as_cal","text":"","code":"as_cal(x)  # S3 method for CalDates as_cal(x)  # S3 method for oxcAARCalibratedDatesList as_cal(x)  # S3 method for oxcAARCalibratedDate as_cal(x)  # S3 method for BchronCalibratedDates as_cal(x)"},{"path":"/reference/as_cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to a cal object — as_cal","text":"x object converted cal object.","code":""},{"path":"/reference/as_cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object to a cal object — as_cal","text":"cal object: data frame two columns, year p, representing calibrated probability distribution. values stored attributes can accessed cal_metadata().","code":""},{"path":[]},{"path":"/reference/c14_calibrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate radiocarbon dates — c14_calibrate","title":"Calibrate radiocarbon dates — c14_calibrate","text":"thin wrapper rcarbon::calibrate() returns calibrated dates single list rather `CalDates`` object. Useful, example, want add column calibrated dates existing table dplyr::mutate()","code":""},{"path":"/reference/c14_calibrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate radiocarbon dates — c14_calibrate","text":"","code":"c14_calibrate(cra, error, ..., engine = c(\"rcarbon\", \"OxCal\", \"Bchron\"))"},{"path":"/reference/c14_calibrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate radiocarbon dates — c14_calibrate","text":"cra vector uncalibrated radiocarbon ages. error vector standard errors associated cra ... Optional arguments passed calibration function. engine Package use calibration, .e. rcarbon::calibrate() (\"rcarbon\"), oxcAAR::oxcalCalibrate() (\"OxCal\"), Bchron::BchronCalibrate() (\"Bchron\"). Default: \"rcarbon\".","code":""},{"path":"/reference/c14_calibrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate radiocarbon dates — c14_calibrate","text":"list cal objects.","code":""},{"path":[]},{"path":"/reference/c14_calibrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate radiocarbon dates — c14_calibrate","text":"","code":"data(\"shub1_radiocarbon\") shub1_radiocarbon %>%   dplyr::mutate(cal = c14_calibrate(cra, error)) #> [1] \"Calibrating radiocarbon ages...\" #>    |                                                                               |                                                                      |   0%   |                                                                               |===                                                                   |   4%   |                                                                               |=====                                                                 |   7%   |                                                                               |========                                                              |  11%   |                                                                               |==========                                                            |  15%   |                                                                               |=============                                                         |  19%   |                                                                               |================                                                      |  22%   |                                                                               |==================                                                    |  26%   |                                                                               |=====================                                                 |  30%   |                                                                               |=======================                                               |  33%   |                                                                               |==========================                                            |  37%   |                                                                               |=============================                                         |  41%   |                                                                               |===============================                                       |  44%   |                                                                               |==================================                                    |  48%   |                                                                               |====================================                                  |  52%   |                                                                               |=======================================                               |  56%   |                                                                               |=========================================                             |  59%   |                                                                               |============================================                          |  63%   |                                                                               |===============================================                       |  67%   |                                                                               |=================================================                     |  70%   |                                                                               |====================================================                  |  74%   |                                                                               |======================================================                |  78%   |                                                                               |=========================================================             |  81%   |                                                                               |============================================================          |  85%   |                                                                               |==============================================================        |  89%   |                                                                               |=================================================================     |  93%   |                                                                               |===================================================================   |  96%   |                                                                               |======================================================================| 100% #> [1] \"Done.\" #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `cal = c14_calibrate(cra, error)`. #> Caused by warning: #> ! stratigraphr::c14_calibrate() is deprecated. Please use c14::c14_calibrate() instead. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. #> # A tibble: 27 × 9 #>    lab_id      context phase   sample         material   cra error outlier cal   #>    <chr>         <int> <chr>   <chr>          <chr>    <int> <int> <lgl>   <lis> #>  1 RTD-7951         23 Phase 7 Context 126, … Bolbosc… 12166    55 FALSE   <cal> #>  2 Beta-112146      24 Phase 7 SHUB1/105      gazelle… 12310    60 FALSE   <cal> #>  3 RTD-7317         26 Phase 7 Context 83, S… Bolbosc… 12289    46 FALSE   <cal> #>  4 RTD-7318         27 Phase 7 Context 86, S… Zilla s… 12332    46 FALSE   <cal> #>  5 RTD-7948         24 Phase 7 Context 120, … Bolbosc… 12478    38 FALSE   <cal> #>  6 RTD-7947         22 Phase 6 Context 166, … Bolbosc… 12322    38 FALSE   <cal> #>  7 RTD-7313         22 Phase 6 Context 67, K… Bolbosc… 12346    46 FALSE   <cal> #>  8 RTD-7311         22 Phase 6 Context 67, K… Vitex s… 12367    65 FALSE   <cal> #>  9 RTD-7312         22 Phase 6 Context 67, K… Zilla s… 12405    50 FALSE   <cal> #> 10 RTD-7314         22 Phase 6 Context 67, K… Bolbosc… 12273    48 FALSE   <cal> #> # ℹ 17 more rows"},{"path":"/reference/c14_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum radiocarbon dates with tidy syntax — c14_sum","title":"Sum radiocarbon dates with tidy syntax — c14_sum","text":"wrapper rcarbon::spd() takes list calibrated dates rather CalDates object. allows use output c14_calibrate() take advantage tidy summary syntax (dplyr::group_by(), etc.)","code":""},{"path":"/reference/c14_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum radiocarbon dates with tidy syntax — c14_sum","text":"","code":"c14_sum(cal, time_range = NA, ...)"},{"path":"/reference/c14_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum radiocarbon dates with tidy syntax — c14_sum","text":"cal list cal objects. time_range Vector length 2 indicating range calendar dates sum. left NA, maximum range cal used. See details. ... Optional arguments passed rcarbon::spd()","code":""},{"path":"/reference/c14_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum radiocarbon dates with tidy syntax — c14_sum","text":"calGrid object containing summed probability distribution.","code":""},{"path":"/reference/c14_sum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum radiocarbon dates with tidy syntax — c14_sum","text":"Unlike rcarbon::spd(), function attempt guess appropriate time range explicitly specified time_range. probably good idea specify .","code":""},{"path":[]},{"path":"/reference/c14_sum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum radiocarbon dates with tidy syntax — c14_sum","text":"","code":"data(\"shub1_radiocarbon\") shub1_radiocarbon %>%   dplyr::mutate(cal = c14_calibrate(cra, error, normalise = FALSE, verbose = FALSE)) %>%   dplyr::group_by(phase) %>%   dplyr::summarise(SPD = c14_sum(cal, spdnormalised = TRUE, verbose = FALSE),                    .groups = \"drop_last\") #> Warning: There were 2 warnings in `dplyr::mutate()`. #> The first warning was: #> ℹ In argument: `cal = c14_calibrate(cra, error, normalise = FALSE, verbose = #>   FALSE)`. #> Caused by warning: #> ! stratigraphr::c14_calibrate() is deprecated. Please use c14::c14_calibrate() instead. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning. #> Warning: There were 34 warnings in `dplyr::summarise()`. #> The first warning was: #> ℹ In argument: `SPD = c14_sum(cal, spdnormalised = TRUE, verbose = FALSE)`. #> ℹ In group 1: `phase = \"Phase 1\"`. #> Caused by warning: #> ! stratigraphr::c14_sum() is deprecated. Please use c14::c14_sum() instead. #> ℹ Run `dplyr::last_dplyr_warnings()` to see the 33 remaining warnings. #> # A tibble: 7 × 2 #>   phase   SPD                    #>   <chr>   <list>                 #> 1 Phase 1 <CalGrid [11,659 × 2]> #> 2 Phase 2 <CalGrid [560 × 2]>    #> 3 Phase 3 <CalGrid [473 × 2]>    #> 4 Phase 4 <CalGrid [1,273 × 2]>  #> 5 Phase 5 <CalGrid [1,377 × 2]>  #> 6 Phase 6 <CalGrid [1,155 × 2]>  #> 7 Phase 7 <CalGrid [1,327 × 2]>"},{"path":"/reference/cal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrated radiocarbon dates — cal","title":"Calibrated radiocarbon dates — cal","text":"cal() constructs generic representation calibrated radiocarbon date calendar-based probability distribution.","code":""},{"path":"/reference/cal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrated radiocarbon dates — cal","text":"","code":"cal(   x,   era = c(\"cal BP\"),   lab_id = NA,   cra = NA,   error = NA,   curve = NA,   reservoir_offset = NA,   reservoir_offset_error = NA,   calibration_range = NA,   F14C = NA,   normalised = NA,   p_cutoff = NA )  # S3 method for cal print(x, ...)"},{"path":"/reference/cal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrated radiocarbon dates — cal","text":"x data.frame two columns, calendar years associated probabilities. era (Optional) character. Calendar system used. Default: cal BP. lab_id (Optional) character. Lab code label calibrated sample. cra (Optional) integer. Uncalibrated conventional radiocarbon age (CRA) sample. error (Optional) integer. Error associated uncalibrated sample. curve (Optional) character. Atmospheric curve used calibration, e.g. \"intcal20\". reservoir_offset (Optional) integer. Marine reservoir offset used calibration, . reservoir_offset_error (Optional) integer. Error associated marine reservoir offset. calibration_range (Optional) integer vector length 2. range years calibration performed, .e. c(start, end). F14C (Optional) logical. Whether calibration calculated using F14C values instead CRA. normalised (Optional) logical. Whether calibrated probability densities normalised. p_cutoff (Optional) numeric. Lower threshold beyond probability densities considered zero. ... (Optional) Arguments based functions.","code":""},{"path":"/reference/cal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrated radiocarbon dates — cal","text":"cal object: data frame two columns, year p, representing calibrated probability distribution. values stored attributes can accessed cal_metadata().","code":""},{"path":[]},{"path":"/reference/cal_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract metadata from a calibrated date — cal_metadata","title":"Extract metadata from a calibrated date — cal_metadata","text":"Extract metadata calibrated date","code":""},{"path":"/reference/cal_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract metadata from a calibrated date — cal_metadata","text":"","code":"cal_metadata(x)"},{"path":"/reference/cal_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract metadata from a calibrated date — cal_metadata","text":"x cal object. See cal().","code":""},{"path":"/reference/cal_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract metadata from a calibrated date — cal_metadata","text":"named list metadata attributes.","code":""},{"path":[]},{"path":"/reference/cql.html","id":null,"dir":"Reference","previous_headings":"","what":"Chronological Query Language (CQL) — cql","title":"Chronological Query Language (CQL) — cql","text":"Provides R interface Chronological Query Language (CQL), primarily used input commands describe models OxCal.","code":""},{"path":"/reference/cql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chronological Query Language (CQL) — cql","text":"","code":"cql(...)  as_cql(x)  # S3 method for list as_cql(x)  # S3 method for default as_cql(x)"},{"path":"/reference/cql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chronological Query Language (CQL) — cql","text":"... cql objects assembled script. x Object coerced cql object.","code":""},{"path":"/reference/cql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chronological Query Language (CQL) — cql","text":"CQL script.","code":""},{"path":"/reference/cql.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chronological Query Language (CQL) — cql","text":"CQL scripts represented S3 class cql. cql() takes output individual cql_ functions assembles single script. See vignette(\"cql\") tutorial. List arguments cql() collapsed produce single script. want coerce object cql preserve structure, use as_cql() instead.","code":""},{"path":"/reference/cql.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chronological Query Language (CQL) — cql","text":"https://c14.arch.ox.ac.uk/oxcalhelp/hlp_commands.html","code":""},{"path":[]},{"path":"/reference/cql_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe a boundary constraint in CQL — cql_boundary","title":"Describe a boundary constraint in CQL — cql_boundary","text":"CQL command Boundary describes constraints within ordered sequence (see cql_sequence()). Groups events two boundaries assumed sampled prior distribution. Boundary alone models uniform prior. types boundary, .e. Sigma_Boundary, Tau_Boundary, Zero_Boundary yet implemented stratigraphr. Boundaries can contain Transition command, case describe non-instantaneous transition 'trapezium' prior.","code":""},{"path":"/reference/cql_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe a boundary constraint in CQL — cql_boundary","text":"","code":"cql_boundary(name, ..., prior = NULL)  cql_sigma_boundary()  cql_tau_boundary()  cql_zero_boundary()  cql_transition(name, prior = NULL)"},{"path":"/reference/cql_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe a boundary constraint in CQL — cql_boundary","text":"name Character. Label boundary transition. ... cql objects contained within boundary. prior cql object. Expression describing prior likelihood boundary transition.","code":""},{"path":"/reference/cql_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe a boundary constraint in CQL — cql_boundary","text":"cql object.","code":""},{"path":"/reference/cql_boundary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe a boundary constraint in CQL — cql_boundary","text":"https://c14.arch.ox.ac.uk/oxcalhelp/hlp_analysis_oper.html#group https://c14.arch.ox.ac.uk/oxcalhelp/hlp_commands.html","code":""},{"path":[]},{"path":"/reference/cql_boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe a boundary constraint in CQL — cql_boundary","text":"","code":"# Uniform model with unknown boundaries cql(   cql_boundary(\"P1 start\"),   cql_phase(\"P1\", list(     cql_r_date(\"A\", 5050, 30),     cql_r_date(\"B\", 5000, 30),     cql_r_date(\"C\", 4950, 30)   )),   cql_boundary(\"P1 end\") ) #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  Boundary(\"P1 start\"); #>  Phase(\"P1\") #>  { #>   R_Date(\"A\", 5050, 30); #>   R_Date(\"B\", 5000, 30); #>   R_Date(\"C\", 4950, 30); #>  }; #>  Boundary(\"P1 end\");  # Uniform model with boundaries with a prior likelihood cql(   cql_boundary(\"P1 start\",                prior = cql_date(\"P1S-Prior\", cql_u(\"\", 5200, 5100))),   cql_phase(\"P1\", list(     cql_r_date(\"A\", 5050, 30),     cql_r_date(\"B\", 5000, 30),     cql_r_date(\"C\", 4950, 30)   )),   cql_boundary(\"P1 end\",                prior = cql_date(\"P1E-Prior\", cql_u(\"\", 4800, 4900))) ) #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  Boundary(\"P1 start\", Date(\"P1S-Prior\", U(\"\", 5200, 5100));); #>  Phase(\"P1\") #>  { #>   R_Date(\"A\", 5050, 30); #>   R_Date(\"B\", 5000, 30); #>   R_Date(\"C\", 4950, 30); #>  }; #>  Boundary(\"P1 end\", Date(\"P1E-Prior\", U(\"\", 4800, 4900)););  # 'Trapezium' model cql(   cql_boundary(\"P1 start\",     cql_transition(\"\")   ),   cql_phase(\"P1\", list(     cql_r_date(\"A\", 5050, 30),     cql_r_date(\"B\", 5000, 30),     cql_r_date(\"C\", 4950, 30)   )),   cql_boundary(\"P1 end\",     cql_transition(\"\")   ) ) #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  Boundary(\"P1 start\") #>  { #>   Transition(\"\"); #>  }; #>  Phase(\"P1\") #>  { #>   R_Date(\"A\", 5050, 30); #>   R_Date(\"B\", 5000, 30); #>   R_Date(\"C\", 4950, 30); #>  }; #>  Boundary(\"P1 end\") #>  { #>   Transition(\"\"); #>  };"},{"path":"/reference/cql_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe distributions in CQL — cql_n","title":"Describe distributions in CQL — cql_n","text":"CQL commands N, LnN, T, U Top_Hat describe various types probability distribution functions. cql_n() defines normal distribution mean standard deviation; cql_lnn() log–normal distribution mean standard deviation; cql_t() Student's t distribution degrees freedom; cql_u() uniform distribution start end; cql_top_hat() uniform distribution central point width.","code":""},{"path":"/reference/cql_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe distributions in CQL — cql_n","text":"","code":"cql_n(name, mu, sigma, resolution = NULL)  cql_lnn(name, mu, sigma, resolution = NULL)  cql_t(name, freedom, scale = 1, resolution = NULL)  cql_top_hat(name, mid, half_width)  cql_u(name, from, to, resolution = NULL)"},{"path":"/reference/cql_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe distributions in CQL — cql_n","text":"name Character. Label distribution. mu Integer. Mean normal log–normal distribution. sigma Integer. Standard deviation normal log–normal distribution. resolution Integer. Resolution PDF. Leave NULL (default) use OxCal default. freedom Integer. Degrees freedom Student's t distribution. scale Numeric. Optional scaling parameter Student's t distribution. mid Integer. Centre point uniform distribution. half_width Integer. Half-width uniform distribution. Integer. Start point uniform distribution. Integer. End point uniform distribution.","code":""},{"path":"/reference/cql_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe distributions in CQL — cql_n","text":"cql object.","code":""},{"path":"/reference/cql_n.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe distributions in CQL — cql_n","text":"https://c14.arch.ox.ac.uk/oxcalhelp/hlp_analysis_inform.html#param https://c14.arch.ox.ac.uk/oxcalhelp/hlp_commands.html","code":""},{"path":[]},{"path":"/reference/cql_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe distributions in CQL — cql_n","text":"","code":"# Describe a date as a uniform distribution cql_date(\"U-Date\", cql_u(\"U\", -5000, -4000)) #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  Date(\"U-Date\", U(\"U\", -5000, -4000););"},{"path":"/reference/cql_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set OxCal options in CQL — cql_options","title":"Set OxCal options in CQL — cql_options","text":"function generates CQL command sets OxCal's global options.","code":""},{"path":"/reference/cql_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set OxCal options in CQL — cql_options","text":"","code":"cql_options(   bcad = TRUE,   convergence_data = FALSE,   curve = \"intcal20.14c\",   cubic = TRUE,   ensembles = 30,   floruit = FALSE,   intercept = FALSE,   k_iterations = 30,   plus_minus = FALSE,   raw_data = FALSE,   resolution = 5,   round = FALSE,   round_by = 0,   sd1 = TRUE,   sd2 = TRUE,   sd3 = FALSE,   uniform_span_prior = TRUE,   use_f14c = TRUE,   year = 1950.5,   ... )"},{"path":"/reference/cql_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set OxCal options in CQL — cql_options","text":"bcad Logical. Whether BC/AD used log file output. convergence_data Logical. Whether sample convergence data included output data file. curve Character. default calibration curve. cubic Logical. Whether cubic (opposed linear) interpolation used calibration curves. ensembles Integer. number age-depth ensembles stored analysis. floruit Logical. Whether quantile ranges calculated instead default highest posterior density (hpd). intercept Logical. Whether intercept method used radiocarbon calibration ranges. k_iterations Integer. default number MCMC passes. plus_minus Logical. Whether + - used place BC AD log files. raw_data Logical. Whether raw calibration curve data included output data file. resolution Integer. default bin size probability distributions Date Interval type. round Logical. Whether ranges rounded . round_by Integer. Resolution rounding (0 automatic). sd1 Logical. Whether 68.2% (1 σ) ranges given log tab delimited files. sd2 Logical. Whether 95.4% (2 σ) ranges given log tab delimited files. sd3 Logical. Whether 99.7% (3 σ) ranges given log tab delimited files. uniform_span_prior Logical. Whether two extra prior factors suggested Nicholls Jones 2001 used. use_f14c Logical. Whether calibrations take place F14C space (rather BP space). year Numeric. datum point ages - default mid AD 1950. ... Additional named arguments converted OxCal options. See details.","code":""},{"path":"/reference/cql_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set OxCal options in CQL — cql_options","text":"cql object.","code":""},{"path":"/reference/cql_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set OxCal options in CQL — cql_options","text":"Parameter descriptions defaults taken OxCal v4.4 documentation (see references). Options explicitly included can specified additional named arguments function. name must exactly match name option expected OxCal; unknown misspelled options silently ignored.","code":""},{"path":"/reference/cql_options.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set OxCal options in CQL — cql_options","text":"https://c14.arch.ox.ac.uk/oxcalhelp/hlp_analysis_detail.html#opt","code":""},{"path":[]},{"path":"/reference/cql_other.html","id":null,"dir":"Reference","previous_headings":"","what":"Other CQL functions (unimplemented) — cql_other","title":"Other CQL functions (unimplemented) — cql_other","text":"CQL commands yet implemented stratigraphr included reference. Unimplemented commands can included manually using cql() (see examples), need one analysis please file bug report!","code":""},{"path":"/reference/cql_other.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Other CQL functions (unimplemented) — cql_other","text":"","code":"cql_age(...)  cql_axis(...)  cql_c_combine(...)  cql_c_simulate(...)  cql_correl_matrix(...)  cql_correlation(...)  cql_covar_matrix(...)  cql_curve(...)  cql_delta_r(...)  cql_difference(...)  cql_end(...)  cql_exp(...)  cql_gap(...)  cql_interval(...)  cql_kde_model(...)  cql_kde_plot(...)  cql_label(...)  cql_line(...)  cql_mcmc_sample(...)  cql_mix_curves(...)  cql_number(...)  cql_offset(...)  cql_outlier(...)  cql_outlier_model(...)  cql_p(...)  cql_pois(...)  cql_prior(...)  cql_probability(...)  cql_r_combine(...)  cql_r_simulate(...)  cql_reservoir(...)  cql_sample(...)  cql_sapwood(...)  cql_sapwood_model(...)  cql_shift(...)  cql_start(...)  cql_after()  cql_before()  cql_combine()  cql_first()  cql_last()  cql_order()  cql_span()  cql_sum()"},{"path":"/reference/cql_other.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Other CQL functions (unimplemented) — cql_other","text":"... Ignored.","code":""},{"path":"/reference/cql_other.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Other CQL functions (unimplemented) — cql_other","text":"warning use functions!","code":""},{"path":[]},{"path":"/reference/cql_other.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Other CQL functions (unimplemented) — cql_other","text":"","code":"# Use cql() to manually write commands that are not yet implemented, e.g.: cql(\"After(\\\"A\\\");\") #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  After(\"A\");"},{"path":"/reference/cql_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe an unordered group in CQL — cql_phase","title":"Describe an unordered group in CQL — cql_phase","text":"CQL command Phase used describe unordered group events model.","code":""},{"path":"/reference/cql_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe an unordered group in CQL — cql_phase","text":"","code":"cql_phase(name, cql)"},{"path":"/reference/cql_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe an unordered group in CQL — cql_phase","text":"name Character. Label phase. cql Vector cql objects contained phase.","code":""},{"path":"/reference/cql_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe an unordered group in CQL — cql_phase","text":"cql object.","code":""},{"path":"/reference/cql_phase.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe an unordered group in CQL — cql_phase","text":"https://c14.arch.ox.ac.uk/oxcalhelp/hlp_commands.html","code":""},{"path":[]},{"path":"/reference/cql_phase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe an unordered group in CQL — cql_phase","text":"","code":"cql(   cql_phase(\"Phase A\", c(     cql_r_date(\"ABC-001\", 10100, 50),     cql_r_date(\"ABC-002\", 10200, 50),     cql_r_date(\"ABC-003\", 10300, 50)   )) ) #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  Phase(\"Phase A\") #>  { #>   R_Date(\"ABC-001\", 10100, 50); #>   R_Date(\"ABC-002\", 10200, 50); #>   R_Date(\"ABC-003\", 10300, 50); #>  };"},{"path":"/reference/cql_r_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe dates in CQL — cql_r_date","title":"Describe dates in CQL — cql_r_date","text":"CQL commands R_Date, F14C_Date, C_Date Date used describe individual dated events model. R_Date F14C_Date represent radiocarbon dates expressed radiocarbon years (conventional radiocarbon age, CRA) fraction modern (F14C) respectively. C_Date represents calendar date. Date directly specifies date OxCal's internal format.","code":""},{"path":"/reference/cql_r_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe dates in CQL — cql_r_date","text":"","code":"cql_r_date(name, date, error)  cql_c_date(name, date, error)  cql_r_f14c(name, date, error)  cql_date(name, date)"},{"path":"/reference/cql_r_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe dates in CQL — cql_r_date","text":"name Character. Date label(s), usually lab code. date Numeric. Date dates expressed radiocarbon years (cql_r_date()), F14C (cql_f14c_date()), calendar years (cql_c_date()), OxCal's internal format (cql_date()) See details. error Integer. Uncertainty associated date(s).","code":""},{"path":"/reference/cql_r_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe dates in CQL — cql_r_date","text":"cql object, list cql objects arguments vectors.","code":""},{"path":"/reference/cql_r_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Describe dates in CQL — cql_r_date","text":"era expected calendar dates (BP BC/AD) depends global option OxCal, defaults BC/AD. BC dates specified negative values. F14C measurements recommended modern, \"post-bomb\" radiocarbon dates (Reimer et al. 2004) . OxCal's internal date format, used Date(), decimal Gregorian year, details see: https://c14.arch.ox.ac.uk/oxcalhelp/hlp_analysis_calend.html","code":""},{"path":"/reference/cql_r_date.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe dates in CQL — cql_r_date","text":"https://c14.arch.ox.ac.uk/oxcalhelp/hlp_analysis_inform.html#date https://c14.arch.ox.ac.uk/oxcalhelp/hlp_commands.html Reimer PJ, Brown TA, Reimer RW (2004). “Discussion: Reporting Calibration Post-Bomb 14C Data.” Radiocarbon, 46(3), 1299--1304. ISSN 0033-8222, 1945-5755, doi:10.1017/S0033822200033154 .","code":""},{"path":[]},{"path":"/reference/cql_sequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe an ordered group in CQL — cql_sequence","title":"Describe an ordered group in CQL — cql_sequence","text":"CQL command Sequence used describe ordered group events model. Specific types sequence, .e. D_Sequence, P_Sequence, U_Sequence, V_Sequence, yet implemented stratigraphr.","code":""},{"path":"/reference/cql_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe an ordered group in CQL — cql_sequence","text":"","code":"cql_sequence(name, cql, boundaries = FALSE)  cql_d_sequence()  cql_p_sequence()  cql_u_sequence()  cql_v_sequence()"},{"path":"/reference/cql_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe an ordered group in CQL — cql_sequence","text":"name Character. Label sequence. cql Vector cql objects contained sequence. boundaries Logical. TRUE, adds Boundary constraints item sequence.","code":""},{"path":"/reference/cql_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe an ordered group in CQL — cql_sequence","text":"cql object.","code":""},{"path":"/reference/cql_sequence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Describe an ordered group in CQL — cql_sequence","text":"OxCal expects events within sequences chronological order (oldest youngest) stratigraphic order (youngest oldest).","code":""},{"path":"/reference/cql_sequence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Describe an ordered group in CQL — cql_sequence","text":"https://c14.arch.ox.ac.uk/oxcalhelp/hlp_commands.html","code":""},{"path":[]},{"path":"/reference/cql_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe an ordered group in CQL — cql_sequence","text":"","code":"cql(   cql_sequence(\"Sequence A\", c(     cql_r_date(\"ABC-001\", 10100, 50),     cql_r_date(\"ABC-002\", 10200, 50),     cql_r_date(\"ABC-003\", 10300, 50)   )) ) #>  // CQL2 generated by stratigraphr v0.3.0.9000 #>  Sequence(\"Sequence A\") #>  { #>   R_Date(\"ABC-001\", 10100, 50); #>   R_Date(\"ABC-002\", 10200, 50); #>   R_Date(\"ABC-003\", 10300, 50); #>  };"},{"path":"/reference/harris12.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratigraphy from Harris Figure 12 — harris12","title":"Stratigraphy from Harris Figure 12 — harris12","text":"model stratigraphic sequence used Edward Harris (1979)  illustrate construction Harris matrix.","code":""},{"path":"/reference/harris12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratigraphy from Harris Figure 12 — harris12","text":"","code":"harris12"},{"path":"/reference/harris12.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stratigraphy from Harris Figure 12 — harris12","text":"data frame 10 rows 4 variables: context Label stratigraphic unit. Unit stratigraphically . Unit stratigraphically . equal Unit stratigraphically equal.","code":""},{"path":"/reference/harris12.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Stratigraphy from Harris Figure 12 — harris12","text":"Harris (1979) , p. 39.","code":""},{"path":"/reference/harris12.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stratigraphy from Harris Figure 12 — harris12","text":"Harris EC (1979). Principles archaeological stratigraphy. Academic Press, London. ISBN 9780123266514.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/read_lst.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an LST file — read_lst","title":"Read an LST file — read_lst","text":"Reads stratigraphic data LST format (used BASP Harris, Stratify, ArchEd) data frame.","code":""},{"path":"/reference/read_lst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an LST file — read_lst","text":"","code":"read_lst(file, split = TRUE, sep = \",\", locale = readr::default_locale())"},{"path":"/reference/read_lst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an LST file — read_lst","text":"file Path LST file. split Controls attributes contain multiple values handled. TRUE, attributes except name split values contain character specified sep. FALSE, splitting done. Alternatively, specify vector column names (corresponding LST attribute names, see details) split. sep Delimiter used separate multiple values attributes. multiple values. Ignored split = FALSE. Default: \",\". locale readr::locale() object specifying character encoding region-specific settings used file. Defaults readr::default_locale().","code":""},{"path":"/reference/read_lst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an LST file — read_lst","text":"data frame. row represents one stratum. Columns contain name stratum attributes associated (typically \"\", \"contemporary_with\", \"equal_to\" \"\"). Attribute names standardised read column names. Specifically, transformed lower case spaces replaced underscore (_). Splitting multiple values vectors useful output used construct stratigraphic graph stratigraph(), convert affected columns atomic vectors lists, can make awkward work contexts. Set split = FALSE avoid . can manually split later stringr::str_split().","code":""},{"path":"/reference/read_lst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read an LST file — read_lst","text":"function supports original LST format used BASP Harris \"extended\" format used ArchEd Stratify.","code":""},{"path":"/reference/read_lst.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read an LST file — read_lst","text":"http://archaeologic.al/wiki/Harris_Matrix#LST","code":""},{"path":"/reference/read_lst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an LST file — read_lst","text":"","code":"# Example data from https://github.com/lparchaeology/harris2graph # Simple LST (BASP Harris) basp_lst <- system.file(\"extdata\", \"bonn.lst\", package = \"stratigraphr\") read_lst(basp_lst) #> # A tibble: 19 × 5 #>    name  above     contemporary_with equal_to below     #>    <chr> <list>    <chr>             <chr>    <list>    #>  1 +     <chr [1]> NA                NA       <chr [4]> #>  2 -     <chr [5]> NA                NA       <chr [1]> #>  3 1     <chr [1]> NA                NA       <chr [1]> #>  4 2     <chr [1]> NA                NA       <chr [2]> #>  5 27    <chr [1]> NA                NA       <chr [2]> #>  6 28    <chr [1]> NA                NA       <chr [1]> #>  7 29    <chr [1]> NA                NA       <chr [1]> #>  8 3     <chr [1]> NA                NA       <chr [1]> #>  9 30    <chr [2]> NA                NA       <chr [1]> #> 10 35    <chr [2]> NA                NA       <chr [1]> #> 11 4     <chr [1]> NA                NA       <chr [1]> #> 12 41    <chr [2]> NA                NA       <chr [1]> #> 13 42    <chr [1]> NA                NA       <chr [1]> #> 14 43    <chr [1]> NA                NA       <chr [1]> #> 15 44    <chr [1]> NA                NA       <chr [1]> #> 16 52    <chr [1]> NA                NA       <chr [4]> #> 17 53    <chr [1]> NA                NA       <chr [1]> #> 18 54    <chr [1]> NA                NA       <chr [1]> #> 19 70    <chr [2]> NA                NA       <chr [1]>  # Extended LST (Stratify, ArchEd) stratify_lst <- system.file(\"extdata\", \"stratify.lst\", package = \"stratigraphr\") read_lst(stratify_lst) #> # A tibble: 17 × 4 #>    name    below     unit_class above     #>    <chr>   <list>    <chr>      <list>    #>  1 TST::1  <chr [1]> context    <chr [1]> #>  2 TST::2  <chr [2]> context    <chr [1]> #>  3 TST::27 <chr [2]> context    <chr [1]> #>  4 TST::28 <chr [1]> context    <chr [1]> #>  5 TST::29 <chr [1]> context    <chr [1]> #>  6 TST::3  <chr [1]> context    <chr [1]> #>  7 TST::30 <chr [1]> context    <chr [2]> #>  8 TST::35 <chr [1]> context    <chr [2]> #>  9 TST::4  <chr [1]> context    <chr [1]> #> 10 TST::41 <chr [1]> context    <chr [2]> #> 11 TST::42 <chr [1]> context    <chr [1]> #> 12 TST::43 <chr [1]> context    <chr [1]> #> 13 TST::44 <chr [1]> context    <chr [1]> #> 14 TST::52 <chr [4]> context    <chr [1]> #> 15 TST::53 <chr [1]> context    <chr [1]> #> 16 TST::54 <chr [1]> context    <chr [1]> #> 17 TST::70 <chr [1]> context    <chr [2]>"},{"path":"/reference/shub1.html","id":null,"dir":"Reference","previous_headings":"","what":"Schematic stratigraphy of Shubayqa 1 — shub1","title":"Schematic stratigraphy of Shubayqa 1 — shub1","text":"simplified version stratigraphy Shubayqa 1, Epipalaeolithic site eastern Jordan, Richter et al. (2017) .","code":""},{"path":"/reference/shub1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schematic stratigraphy of Shubayqa 1 — shub1","text":"","code":"shub1"},{"path":"/reference/shub1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Schematic stratigraphy of Shubayqa 1 — shub1","text":"data frame 30 rows, representing contexts, 7 variables: context integer; unique identifier context. type character; type context, .e. deposit, fill, cut, structural. integer vector; context(s) stratigraphically one. integer vector; context(s) stratigraphically one. equal integer vector; context(s) stratigraphically equal one. phase character; Phase assigned context, contexts structural. structure character; structural contexts, name structure belong .","code":""},{"path":"/reference/shub1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Schematic stratigraphy of Shubayqa 1 — shub1","text":"Richter et al. (2017)","code":""},{"path":"/reference/shub1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Schematic stratigraphy of Shubayqa 1 — shub1","text":"stratigraphy simplified version derived schematic section Richter et al. (2017) , figure 2. Context numbers arbitrarily assigned stratigraphic relations based evident diagram. Phase structure names also based diagram.","code":""},{"path":"/reference/shub1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Schematic stratigraphy of Shubayqa 1 — shub1","text":"Richter T, Arranz-Otaegui , Yeomans L, Boaretto E (2017). “High Resolution AMS Dates Shubayqa 1, northeast Jordan Reveal Complex Origins Late Epipalaeolithic Natufian Levant.” Scientific reports, 7(1), 17025. ISSN 2045-2322, doi:10.1038/s41598-017-17096-5 .","code":""},{"path":[]},{"path":"/reference/shub1_radiocarbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Radiocarbon dates from Shubayqa 1 — shub1_radiocarbon","title":"Radiocarbon dates from Shubayqa 1 — shub1_radiocarbon","text":"Radiocarbon dates Shubayqa 1, Epipalaeolithic site eastern Jordan, Richter et al. (2017) .","code":""},{"path":"/reference/shub1_radiocarbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radiocarbon dates from Shubayqa 1 — shub1_radiocarbon","text":"","code":"shub1_radiocarbon"},{"path":"/reference/shub1_radiocarbon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Radiocarbon dates from Shubayqa 1 — shub1_radiocarbon","text":"data frame 27 rows 8 variables: lab_id character; standardised lab code uniquely identifying dated sample. context integer; schematic context number sample found (see details). phase character; phase sample assigned . sample character; description sample context, including real context number. material character; description sample material. cra integer; conventional radiocarbon age sample years cal BP. error integer; standard error associated radiocarbon measurement ± years cal BP. outlier logical; whether sample considered outlier.","code":""},{"path":"/reference/shub1_radiocarbon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Radiocarbon dates from Shubayqa 1 — shub1_radiocarbon","text":"Richter et al. (2017)","code":""},{"path":"/reference/shub1_radiocarbon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Radiocarbon dates from Shubayqa 1 — shub1_radiocarbon","text":"context refers schematic stratigraphy included shub1 dataset; real context number described sample.","code":""},{"path":"/reference/shub1_radiocarbon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Radiocarbon dates from Shubayqa 1 — shub1_radiocarbon","text":"Richter T, Arranz-Otaegui , Yeomans L, Boaretto E (2017). “High Resolution AMS Dates Shubayqa 1, northeast Jordan Reveal Complex Origins Late Epipalaeolithic Natufian Levant.” Scientific reports, 7(1), 17025. ISSN 2045-2322, doi:10.1038/s41598-017-17096-5 .","code":""},{"path":[]},{"path":"/reference/strat_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect stratigraphic units — strat_connect","title":"Connect stratigraphic units — strat_connect","text":"Constructs table directed edges stratigraphic units based vector relations (e.g. \"\" \"\").","code":""},{"path":"/reference/strat_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect stratigraphic units — strat_connect","text":"","code":"strat_connect(units, relations, direction = c(\"above\", \"below\"))"},{"path":"/reference/strat_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect stratigraphic units — strat_connect","text":"units Vector unit labels. relations Vector relations. direction units relations \"\" \"\" ones units?","code":""},{"path":"/reference/strat_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect stratigraphic units — strat_connect","text":"data frame directed edges represented columns, can used nodes argument tidygraph::tbl_graph().","code":""},{"path":"/reference/strat_is_mirror.html","id":null,"dir":"Reference","previous_headings":"","what":"Are two relation vectors mirrored? — strat_is_mirror","title":"Are two relation vectors mirrored? — strat_is_mirror","text":"Checks whether one vector relations inverse another. Typically used confirm \"\" \"\" columns match result stratigraphic graph.","code":""},{"path":"/reference/strat_is_mirror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are two relation vectors mirrored? — strat_is_mirror","text":"","code":"strat_is_mirror(units, relation1, relation2)"},{"path":"/reference/strat_is_mirror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are two relation vectors mirrored? — strat_is_mirror","text":"units Vector unit labels. relation1 First vector relations. relation2 Second vector relations.","code":""},{"path":"/reference/strat_is_mirror.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are two relation vectors mirrored? — strat_is_mirror","text":"TRUE FALSE","code":""},{"path":"/reference/strat_is_mirror.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are two relation vectors mirrored? — strat_is_mirror","text":"","code":"data(\"harris12\") strat_is_mirror(harris12$context, harris12$above, harris12$below) #> [1] TRUE"},{"path":"/reference/strat_is_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an object a valid stratigraphic graph? — strat_is_valid","title":"Is an object a valid stratigraphic graph? — strat_is_valid","text":"object valid stratigraphic graph?","code":""},{"path":"/reference/strat_is_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an object a valid stratigraphic graph? — strat_is_valid","text":"","code":"strat_is_valid(stratigraph, warn = TRUE)"},{"path":"/reference/strat_is_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an object a valid stratigraphic graph? — strat_is_valid","text":"stratigraph stratigraph object (see stratigraph()). warn Display warnings invalid graphs? Default: TRUE.","code":""},{"path":"/reference/strat_is_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an object a valid stratigraphic graph? — strat_is_valid","text":"TRUE FALSE.","code":""},{"path":"/reference/strat_is_valid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is an object a valid stratigraphic graph? — strat_is_valid","text":"Checks whether stratigraph object valid stratigraphic graph. Currently looks : Whether graph contains cycles","code":""},{"path":"/reference/stratigraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a stratigraphic graph — stratigraph","title":"Construct a stratigraphic graph — stratigraph","text":"Takes data frame describing stratigraphic units relations turns graph representation.","code":""},{"path":"/reference/stratigraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a stratigraphic graph — stratigraph","text":"","code":"stratigraph(data, label, relation, direction = c(\"above\", \"below\"))"},{"path":"/reference/stratigraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a stratigraphic graph — stratigraph","text":"data Data frame stratigraphic units, containing least unique label column column describing stratigraphic relations. label Name column containing labels stratigraphic units. relation Name column describing stratigraphic relations units. direction Direction described relation, .e. units column \"\" \"\" ones units. Default: \"\".","code":""},{"path":"/reference/stratigraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a stratigraphic graph — stratigraph","text":"stratigraph object.","code":""},{"path":"/reference/stratigraphr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stratigraphr: Archaeological Stratigraphy and Chronological Sequences — stratigraphr-package","title":"stratigraphr: Archaeological Stratigraphy and Chronological Sequences — stratigraphr-package","text":"tidy framework working archaeological stratigraphy chronology. Includes tools reading, analysing, visualising stratigraphy (Harris matrices) sequences directed graphs (Dye & Buck 2015) doi:10.1016/j.jas.2015.08.008 ; helper functions using radiocarbon dates tidy data analysis; R interface Chronological Query Language (CQL) used 'OxCal' (Bronk Ramsey 2009) doi:10.1017/S0033822200033865 .","code":""},{"path":[]},{"path":"/reference/stratigraphr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stratigraphr: Archaeological Stratigraphy and Chronological Sequences — stratigraphr-package","text":"Maintainer: Joe Roe joe@joeroe.io (ORCID)","code":""},{"path":"/reference/strg_prune.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove redundant relations from a stratigraph — strg_prune","title":"Remove redundant relations from a stratigraph — strg_prune","text":"strg_prune() removes redundant relations stratigraphic graph computing transitive reduction. result 'pruned' graph follows Harris' \"Law Stratigraphical Succession\": uppermost undermost relations significant placing unit stratigraphic sequence.","code":""},{"path":"/reference/strg_prune.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove redundant relations from a stratigraph — strg_prune","text":"","code":"strg_prune(strg)"},{"path":"/reference/strg_prune.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove redundant relations from a stratigraph — strg_prune","text":"strg stratigraph() object prune.","code":""},{"path":"/reference/strg_prune.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove redundant relations from a stratigraph — strg_prune","text":"stratigraph redundant relations removed.","code":""},{"path":"/reference/strg_prune.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove redundant relations from a stratigraph — strg_prune","text":"","code":"bushy_stratigraphy <- stratigraph(   tibble::tibble(     id = letters[1:5],     above = list(NA, \"a\", \"a\", c(\"a\", \"b\", \"c\"), c(\"a\", \"c\", \"d\"))   ),   \"id\", \"above\" )  strg_prune(bushy_stratigraphy) #> # A tbl_graph: 5 nodes and 5 edges #> # #> # A directed acyclic simple graph with 1 component #> # #> # A tibble: 5 × 2 #>   id    above     #>   <chr> <list>    #> 1 a     <lgl [1]> #> 2 b     <chr [1]> #> 3 c     <chr [1]> #> 4 d     <chr [3]> #> 5 e     <chr [3]> #> # #> # A tibble: 5 × 2 #>    from    to #>   <int> <int> #> 1     1     2 #> 2     1     3 #> 3     2     4 #> # ℹ 2 more rows"},{"path":"/reference/write_oxcal.html","id":null,"dir":"Reference","previous_headings":"","what":"Write CQL to a file — write_oxcal","title":"Write CQL to a file — write_oxcal","text":"Writes CQL script (cql()) .oxcal file, input OxCal.","code":""},{"path":"/reference/write_oxcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write CQL to a file — write_oxcal","text":"","code":"write_oxcal(cql, file)"},{"path":"/reference/write_oxcal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write CQL to a file — write_oxcal","text":"cql cql object. See cql(). file Path file.","code":""},{"path":"/reference/write_oxcal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write CQL to a file — write_oxcal","text":"Returns cql invisibly.","code":""},{"path":[]},{"path":"/news/index.html","id":"stratigraphr-development-version","dir":"Changelog","previous_headings":"","what":"stratigraphr (development version)","title":"stratigraphr (development version)","text":"Radiocarbon-related functions (c14_* cal_*) moved c14 package. legacy versions package issue deprecation warning next version, removed.","code":""},{"path":"/news/index.html","id":"stratigraphr-030","dir":"Changelog","previous_headings":"","what":"stratigraphr 0.3.0","title":"stratigraphr 0.3.0","text":"New S3 object cal, generic representation calibrated probability distributions Methods printing summarising cal objects Type conversion functions cal objects (as_cal.CalDates(), as_cal.oxcAARCalibratedDatesList() as_cal.BchronCalibratedDates()) New vignette(\"tidy_radiocarbon\") Breaking change: cal() sum() renamed c14_calibrate c14_sum now return cal objects. Renamed functions: harris() → strat_connect(), is_valid_harris() → strat_is_valid() Removed notion “type” stratigraph(). stratigraph() now return graph even stratigraphically valid. Renamed vignette(\"harris\") → vignette(\"stratigraph\") Utility functions validating stratigraphies: strat_is_mirror() Fixed read_lst() reading Stratify ‘extended’ LST files Added NEWS.md file track changes package.","code":""},{"path":"/news/index.html","id":"stratigraphr-020","dir":"Changelog","previous_headings":"","what":"stratigraphr 0.2.0","title":"stratigraphr 0.2.0","text":"Initial alpha release, including: Functions constructing stratigraphic graphs Simple tidy wrappers rcarbon package Partial CQL interface","code":""}]
